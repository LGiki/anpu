---
import { getCollection } from "astro:content";
import { slugify } from "@/utils";
import Layout from "@/layouts/Layout.astro";
import LyricRenderer from "@/components/LyricRenderer.astro";
import SongMetadata from "@/components/SongMetadata.astro";
import LyricFontSizeSwitcher from "@/components/LyricFontSizeSwitcher.astro";
import BanlamToneSwitcher from "@/components/BanlamToneSwitcher.astro";
import { defaultLang } from "@/i18n/ui";

export async function getStaticPaths() {
  const songs = await getCollection("song", (song) => {
    const [lyricLanguage] = song.slug.split("/");
    return lyricLanguage !== defaultLang;
  });

  return songs.map((song) => {
    const [lyricLanguage, ...slug] = song.slug.split("/");
    return {
      params: { lang: lyricLanguage, slug: slugify(slug.join()) },
      props: song,
    };
  });
}

const song = Astro.props;
---

<Layout title={song.data.title}>
  <article
  class="max-w-3xl mx-auto px-6 py-8 text-base leading-7 text-[var(--foreground)]"
  id="lyric-text"
  >
    <h1 class="font-medium text-2xl mb-4" id="song-title">{song.data.title}</h1>
    <LyricRenderer data={song.body} />
    {
      (song.data.album ||
        song.data.duration ||
        song.data.artist ||
        song.data.lyricist ||
        song.data.arranger ||
        song.data.composer ||
        song.data.producer ||
        song.data.releaseDate ||
        song.data.isrc ||
        song.data.maxingEngineer) && (
        <>
          <hr class="my-5 dark:bg-zinc-700/90 dark:color-zinc-700/90 dark:border-zinc-700/90" />
          <SongMetadata
            album={song.data.album}
            duration={song.data.duration}
            artist={song.data.artist}
            lyricist={song.data.lyricist}
            arranger={song.data.arranger}
            composer={song.data.composer}
            producer={song.data.producer}
            releaseDate={song.data.releaseDate}
            isrc={song.data.isrc}
            maxingEngineer={song.data.maxingEngineer}
          />
        </>
      )
    }
  </article>
  <slot slot="header-right">
    <LyricFontSizeSwitcher />
    {song.data.hasBanlamTone && <BanlamToneSwitcher />}
  </slot>
</Layout>
