---
import { getCollection } from "astro:content";
import { slugify } from "@/utils";
import Layout from "@/layouts/Layout.astro";
import LyricRenderer from "@/components/LyricRenderer.astro";
import SongMetadata from "@/components/SongMetadata.astro";
import LyricFontSizeSwitcher from "@/components/LyricFontSizeSwitcher.astro";
import BanlamToneSwitcher from "@/components/BanlamToneSwitcher.astro";
import { defaultLang } from "@/i18n/ui";

export async function getStaticPaths() {
  const songs = await getCollection("song", (song) => {
    const [lyricLanguage] = song.slug.split("/");
    return lyricLanguage === defaultLang;
  });

  return songs.map((song) => {
    const [_, ...slug] = song.slug.split("/");
    return { params: { slug: slugify(slug.join()) }, props: song };
  });
}

const song = Astro.props;
---

<Layout title={[song.data.title, 'Lyric']}>
  <article
    class="max-w-3xl mx-auto px-6 py-8 text-base leading-7 text-[var(--foreground)]"
    id="lyric-text"
  >
    <h1 class="font-medium text-2xl mb-4" id="song-title">{song.data.title}</h1>
    <LyricRenderer data={song.body} />
    {
      (song.data.album ||
        song.data.duration ||
        song.data.artist ||
        song.data.lyricist ||
        song.data.arranger ||
        song.data.composer ||
        song.data.producer ||
        song.data.releaseDate ||
        song.data.isrc ||
        song.data.mixingEngineer ||
        song.data.electricGuitar ||
        song.data.bass ||
        song.data.piano ||
        song.data.digitalPiano ||
        song.data.guitar ||
        song.data.drums ||
        song.data.acousticGuitar ||
        song.data.keyboard ||
        song.data.recordingEngineer ||
        song.data.masteringEngineer ||
        song.data.pianoRecording ||
        song.data.recordingStudio ||
        song.data.doubleBass ||
        song.data.extra ||
        song.data.coProducer ||
        song.data.coordinator ||
        song.data.cello ||
        song.data.nylonGuitar ||
        song.data.notes ||
        song.data.englishTitle) && (
        <>
          <hr class="my-5 dark:bg-zinc-700/90 dark:color-zinc-700/90 dark:border-zinc-700/90" />
          <SongMetadata
            englishTitle={song.data.englishTitle}
            album={song.data.album}
            duration={song.data.duration}
            artist={song.data.artist}
            lyricist={song.data.lyricist}
            arranger={song.data.arranger}
            composer={song.data.composer}
            producer={song.data.producer}
            releaseDate={song.data.releaseDate}
            isrc={song.data.isrc}
            mixingEngineer={song.data.mixingEngineer}
            electricGuitar={song.data.electricGuitar}
            bass={song.data.bass}
            piano={song.data.piano}
            digitalPiano={song.data.digitalPiano}
            drums={song.data.drums}
            acousticGuitar={song.data.acousticGuitar}
            guitar={song.data.guitar}
            keyboard={song.data.keyboard}
            recordingEngineer={song.data.recordingEngineer}
            masteringEngineer={song.data.masteringEngineer}
            recordingStudio={song.data.recordingStudio}
            pianoRecording={song.data.pianoRecording}
            notes={song.data.notes}
            doubleBass={song.data.doubleBass}
            extra={song.data.extra}
            coProducer={song.data.coProducer}
            coordinator={song.data.coordinator}
            cello={song.data.cello}
            nylonGuitar={song.data.nylonGuitar}
          />
        </>
      )
    }
  </article>
  <slot slot="header-right">
    <LyricFontSizeSwitcher />
    {song.data.hasBanlamTone && <BanlamToneSwitcher />}
  </slot>
</Layout>
