---
import { getCollection } from 'astro:content'
import BanlamToneSwitcher from '@/components/BanlamToneSwitcher.astro'
import LyricFontSizeSwitcher from '@/components/LyricFontSizeSwitcher.astro'
import LyricRenderer from '@/components/LyricRenderer.astro'
import SongMetadata from '@/components/SongMetadata.astro'
import { defaultLang } from '@/i18n/ui'
import Layout from '@/layouts/Layout.astro'
import { slugify } from '@/utils'

export async function getStaticPaths() {
  const songs = await getCollection('song', (song) => {
    const [lyricLanguage] = song.id.split('/')
    return lyricLanguage === defaultLang
  })

  return Promise.all(
    songs.map(async (song) => {
      let album = null
      const [_, ...slug] = song.id.replace(/(\.md)+$/, '').split('/')
      if (song.data.album) {
        const albums = await getCollection('album', (album) => {
          const [albumLanguage] = album.id.split('/')
          return song.data.album === album.data.title && albumLanguage === defaultLang
        })
        if (albums.length > 0) {
          album = albums[0]
        }
      }
      return {
        params: {
          slug: slugify(slug.join()),
        },
        props: {
          song: song,
          album: album,
        },
      }
    })
  )
}

const { song, album } = Astro.props
---

<Layout title={[song.data.title, "Lyric"]}>
  <article class="text-base leading-7 text-[var(--foreground)]" id="lyric-text">
    <h1 class="font-medium text-2xl mb-4" id="song-title">{song.data.title}</h1>
    {song.body && <LyricRenderer data={song.body} />}
    <hr class="my-5 dark:bg-zinc-700/90 dark:color-zinc-700/90 dark:border-zinc-700/90" />
    <SongMetadata song={song} album={album} />
  </article>
  <slot slot="header-right">
    <LyricFontSizeSwitcher />
    {song.data.hasBanlamTone && <BanlamToneSwitcher />}
  </slot>
</Layout>
