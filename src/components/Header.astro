---
import "@fontsource/cinzel/700.css";
import LanguageSwitcher from "./LanguageSwitcher.astro";
import Button from "./Button.astro";
import { Icon } from "astro-icon/components";
import { DEFAULT_TITLE } from "@/constants";
---

<header
  class="bg-white/75 sm:h-12 h-[var(--mobile-header-height)] w-full shadow-md backdrop-blur-xl fixed top-0 left-0 z-20 px-3 sm:px-10 transition-all flex items-center justify-between"
>
  <a href="/">
    <div class="flex gap-1 items-center font-['Cinzel'] sm:text-xl text-sm">
      <div>{DEFAULT_TITLE}</div>
      <div>·</div>
      <div>Lyrics</div>
    </div>
  </a>
  <nav>
    <div class="flex gap-2">
      <slot name="header-right" />
      <LanguageSwitcher labelClass="sm:flex hidden" />
      <Button square id="mobile-menu">
        <Icon name="ph:list-bold" />
      </Button>
    </div>
  </nav>
</header>
<div
  id="drawer-container"
  class="absolute max-w-[24rem] w-3/4 translate-x-[-100%] duration-500 ease-in-out transition-transform bg-white/80 backdrop-blur left-0 top-0 h-svh z-50 justify-center overflow-y-auto flex flex-col py-5"
>
  <div class="absolute right-0 top-0">
    <Icon
      name="ph:x-bold"
      class="mt-3 mr-3 h-6 w-6 cursor-pointer"
      id="close-drawer"
    />
  </div>
  <div class="flex flex-col gap-4 flex-1 h-0 justify-center">
    <a
      class="transition-all text-xl duration-50 flex items-center gap-3 group flex-shrink-0 px-5 py-1.5 text-gray-500 hover:text-gray-800 hover:bg-gray-200 cursor-pointer"
    >
      <Icon name="ph:article-ny-times" class="w-6 h-6" />
      <span>歌词</span>
    </a>
    <a
      class="transition-all text-xl duration-50 flex items-center gap-3 group flex-shrink-0 px-5 py-1.5 text-gray-500 hover:text-gray-800 hover:bg-gray-200 cursor-pointer"
    >
      <Icon name="ph:microphone-stage" class="w-6 h-6" />
      <span>演唱会歌单</span>
    </a>
  </div>
  <div class="flex-shrink-0 mx-5">
    <LanguageSwitcher selectClass="w-full" labelClass="h-[32px]" />
  </div>
</div>
<div
  id="mobile-menu-background"
  class="bg-gray-600/20 absolute z-10 w-screen h-svh transition-opacity duration-500 translate-x-[-100%] opacity-0"
>
</div>

<script>
  const mobileMenuButton = document.getElementById("mobile-menu");
  const closeDrawerButton = document.getElementById("close-drawer");
  const mobileMenuBackground = document.getElementById(
    "mobile-menu-background"
  );
  const drawerContainer = document.getElementById("drawer-container");
  const bodies = document.getElementsByTagName("body");

  const toggleMobileMenu = () => {
    if (bodies.length > 0) {
      const body = bodies[0];
      if (drawerContainer?.classList.contains("translate-x-[-100%]")) {
        // Drawer is invisible, turn it on
        body.dataset.drawerVisible = "true";
        drawerContainer?.classList.remove("translate-x-[-100%]");
        drawerContainer?.classList.add("shadow-2xl");
        mobileMenuBackground?.classList.remove("translate-x-[-100%]");
        mobileMenuBackground?.classList.remove("opacity-0");
        mobileMenuBackground?.classList.add("opacity-100");
      } else {
        // Drawer is visible, turn it off
        body.dataset.drawerVisible = "false";
        mobileMenuBackground?.classList.remove("opacity-100");
        mobileMenuBackground?.classList.add("opacity-0");
        mobileMenuBackground?.classList.add("translate-x-[-100%]");
        drawerContainer?.classList.remove("shadow-2xl");
        drawerContainer?.classList.add("translate-x-[-100%]");
      }
    }
  };

  mobileMenuButton?.addEventListener("click", toggleMobileMenu);
  mobileMenuBackground?.addEventListener("click", toggleMobileMenu);
  closeDrawerButton?.addEventListener("click", toggleMobileMenu);
</script>
