---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { durationToHms } from "@/utils";
import dayjs from "dayjs";
import SongMetadataStringsItem from "./SongMetadataStringsItem.astro";

interface Props {
  album?: string;
  // 长度（秒）
  duration?: number;
  // 歌手
  artist?: string[] | string;
  // 作词者
  lyricist?: string[] | string;
  // 编曲者
  arranger?: string[] | string;
  // 作曲者
  composer?: string[] | string;
  // 制作人
  producer?: string[] | string;
  // 发布日期
  releaseDate?: Date;
  // ISRC, see <https://en.wikipedia.org/wiki/International_Standard_Recording_Code>.
  isrc?: string;
  // 混音师
  maxingEngineer?: string[] | string;
}

const props = Astro.props;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<div
  class="p-4 my-4 border-s-4 rounded-md border-gray-300 bg-gray-50 dark:border-gray-500 dark:bg-gray-800"
>
  {
    props.album && (
      <p class="break-all">
        {t("songMetadata.album")}：{props.album}
      </p>
    )
  }
  {
    props.duration && (
      <p class="break-all">
        {t("songMetadata.duration")}：{durationToHms(props.duration)}
      </p>
    )
  }
  {
    props.artist && (
      <p class="break-all">
        {t("songMetadata.artist")}：<SongMetadataStringsItem value={props.artist}></SongMetadataStringsItem>
      </p>
    )
  }
  {
    props.lyricist && (
      <p class="break-all">
        {t("songMetadata.lyricist")}：<SongMetadataStringsItem value={props.lyricist}></SongMetadataStringsItem>
      </p>
    )
  }
  {
    props.arranger && (
      <p class="break-all">
        {t("songMetadata.arranger")}：<SongMetadataStringsItem value={props.arranger}>
      </p>
    )
  }
  {
    props.composer && (
      <p class="break-all">
        {t("songMetadata.composer")}：<SongMetadataStringsItem value={props.composer}>
      </p>
    )
  }
  {
    props.producer && (
      <p class="break-all">
        {t("songMetadata.producer")}：<SongMetadataStringsItem value={props.producer}>
      </p>
    )
  }
  {
    props.maxingEngineer && (
      <p class="break-all">
        {t("songMetadata.maxingEngineer")}：<SongMetadataStringsItem value={props.maxingEngineer}></SongMetadataStringsItem>
      </p>
    )
  }
  {
    props.releaseDate && (
      <p class="break-all">
        {t("songMetadata.releaseDate")}：
        {dayjs(props.releaseDate).format("YYYY-MM-DD")}
      </p>
    )
  }
  {props.isrc && <p class="break-all">ISRC：{props.isrc}</p>}
</div>
